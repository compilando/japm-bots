server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Docker containers
  - job_name: docker-containers
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    relabel_configs:
      # Only scrape containers with compose project name
      - source_labels:
          [__meta_docker_container_label_com_docker_compose_project]
        regex: japm-bots
        action: keep

      # Set container name as job
      - source_labels: [__meta_docker_container_name]
        target_label: container_name
        regex: /(.*)
        replacement: ${1}

      # Set service name from compose
      - source_labels:
          [__meta_docker_container_label_com_docker_compose_service]
        target_label: service_name

      # Set container ID
      - source_labels: [__meta_docker_container_id]
        target_label: container_id
        regex: (.{12}).*
        replacement: ${1}

    pipeline_stages:
      # Parse JSON logs from our services
      - json:
          expressions:
            timestamp: time
            level: level
            message: msg

      # Parse timestamp if available
      - timestamp:
          source: timestamp
          format: RFC3339Nano
          fallback_formats:
            - RFC3339
            - "2006-01-02T15:04:05.000Z"

      # Add labels based on log content
      - labels:
          level:
          service_name:
          container_name:

      # Clean up output
      - output:
          source: message

      # Remove sensitive data
      - replace:
          expression: '(password|token|secret|key)=\S+'
          replace: "$1=***"

  # System logs
  - job_name: system-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: system-logs
          __path__: /var/log/*.log
